// ---------------------------------------------------------------------------
//
// you have to change these three functions to create the shapefiles you want.
//
// this default implementation creates stuff that roughly equals the shape 
// files on download.geofabrik.de.
//
// ---------------------------------------------------------------------------

void setup_shapefiles()
{
    // set up your shapefiles. for each of the files you want to create,
    // make one call to shapefile_new, with the following parameters:
    //
    // shapefile_new(id, type, basename, num_attrs, ...)
    //
    // where:
    //
    // id -        the number of the file. start with 0 and count upwards.
    // type -      put SHPT_POINT for point files, SHPT_ARC for line files, 
    //             and SHPT_POLYGON for areas.
    // basename -  the file name; extensions .dbf/.shp/.shx will be added.
    // num_attrs - how many attributes you want in the dbf file.
    //
    // for each attribute you will then have to specify the following:
    //
    // a name -    for the name of the column in the .dbf file;
    // a type -    put FTString for strings, FTInteger for integers, and
    //             FTDouble for doubles;
    // a length -  how many characters or digits the value  may have, and
    // decimals -  only for FTDouble, the number of decimals.
    
%SETUP%

}

/**
 * Called when a node has been fully read.
 */
void process_osm_node() 
{
    // this is executed whenever a node has been fully read. 
    //
    // You will find its ID in current_id and its tags in the g_hash_table 
    // current_tags, its lat/lon in the global current_latlon array.
    //
    // Determine whether you want the way added to one of your shapefiles, 
    // and if yes, call
    //
    // shapefile_add_node(id, ...)
    //
    // where "id" is the number of the file you have used during setup,
    // and "..." is the list of attributes, which must match number and
    // type as specified during setup.
    const char *where0, *where1, *where2, *where3, *where4, *where5, *where6, *where7, *where8, *where9, *where10, *where11, *where12, *where13, *where14, *where15, *where16, *where17, *where18, *where19, *where20, *where21, *where22, *where23, *where24, *where25, *where26, *where27, *where28, *where29, *where30, *where31;
    const char *col0, *col1, *col2, *col3, *col4, *col5, *col6, *col7, *col8, *col9, *col10, *col11, *col12, *col13, *col14, *col15, *col16, *col17, *col18, *col19, *col20, *col21, *col22, *col23, *col24, *col25, *col26, *col27, *col28, *col29, *col30, *col31;

    // nodes
%TYPE_0%
};

/**
 * Called when a way has been fully read.
 * You will find its ID in current_id and its tags in the g_hash_table 
 * current_tags. 
 */
void process_osm_way() 
{
    // this is executed whenever a way is fully read. 
    //
    // You will find its ID in current_id and its tags in the g_hash_table 
    // current_tags. 
    //
    // Determine whether you want the way added to one of your shapefiles, 
    // and if yes, call
    //
    // shapefile_add_way(id, ...)
    //
    // where "id" is the number of the file you have used during setup,
    // and "..." is the list of attributes, which must match number and
    // type as specified during setup.
    const char *where0, *where1, *where2, *where3, *where4, *where5, *where6, *where7, *where8, *where9, *where10, *where11, *where12, *where13, *where14, *where15, *where16, *where17, *where18, *where19, *where20, *where21, *where22, *where23, *where24, *where25, *where26, *where27, *where28, *where29, *where30, *where31;
    const char *col0, *col1, *col2, *col3, *col4, *col5, *col6, *col7, *col8, *col9, *col10, *col11, *col12, *col13, *col14, *col15, *col16, *col17, *col18, *col19, *col20, *col21, *col22, *col23, *col24, *col25, *col26, *col27, *col28, *col29, *col30, *col31;
    
    // lines
%TYPE_1%

   // polygons
%TYPE_2%
};

// ---------------------------------------------------------------------------
//
// no maintenance required in the parts below.
//
// ---------------------------------------------------------------------------
